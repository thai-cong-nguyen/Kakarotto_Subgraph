type Count @entity {
  id: ID!

  orderTotal: BigInt!
  orderCharacterTotal: BigInt!
  orderTreasureTotal: BigInt!
  orderItemTotal: BigInt!

  characterTotal: BigInt!
  treasureTotal: BigInt!
  itemTotal: BigInt!

  characterStarted: BigInt!
  itemStarted: BigInt!
  salesTotal: BigInt!
  creatorEarningTotal: BigInt!
  daoEarningTotal: BigInt!
}

type Account @entity {
  id: ID! # address
  address: Bytes! # address
  nfts: [NFT!] @derivedFrom(field: "owner")
  treasureAccounts: [TreasureAccount!] @derivedFrom(field: "account")

  # analytics
  sales: BigInt!
  purchases: BigInt!
  spent: BigInt!
  earned: BigInt!
}

type NFT @entity {
  id: ID!
  tokenId: BigInt! # uint256
  contractAddress: Bytes! # address
  category: Category! # string
  creator: Bytes! # address
  owner: Account!
  amount: BigInt!
  tokenURI: String # string
  rarity: Rarity # string
  orders: [Order!]! @derivedFrom(field: "nft")
  bids: [Bid!]! @derivedFrom(field: "nft")
  activeOrder: Order

  name: String # string
  createdAt: BigInt!
  updatedAt: BigInt!
  soldAt: BigInt
  transferredAt: BigInt!

  character: Character
  item: Item
  treasure: Treasure

  # analytics
  sales: BigInt!
  volume: BigInt!

  # search indexes
  searchOrderStatus: OrderStatus
  searchOrderPrice: BigInt
  searchOrderExpiresAt: BigInt
  searchOrderCreatedAt: BigInt

  searchIsCharacter: Boolean
  searchCharacterAccount: Bytes
  searchCharacterLevel: BigInt
  searchCharacterExp: BigInt
  searchCharacterAttribute: [CharacterAttribute!]

  searchIsTreasure: Boolean

  searchIsItem: Boolean
  searchItemAttribute: [ItemAttribute!]
}

type Character @entity {
  id: ID!
  characterAccount: CharacterAccount @derivedFrom(field: "character")
  level: BigInt! # uint256
  exp: BigInt! # uint256
  nft: NFT! @derivedFrom(field: "character")
  attributes: [CharacterAttribute!] @derivedFrom(field: "character")
}

type CharacterAttribute @entity {
  id: ID!
  attribute: Attribute! # string
  character: Character!
  value: BigInt! # uint256
}

type CharacterAccount @entity {
  id: ID! # address
  character: Character!
  contractAddress: Bytes! # address
}

type Treasure @entity {
  id: ID! # address + tokenId
  tokenId: BigInt! # uint256
  tokenURI: String # string
  nft: NFT! @derivedFrom(field: "treasure")

  name: String # string
  owner: [Account!]
}

type TreasureAccount @entity {
  id: ID!
  account: Account!
  treasure: Treasure!
  balance: BigInt!
}

type Item @entity {
  id: ID!
  nft: NFT! @derivedFrom(field: "item")
  attributes: [ItemAttribute!]! @derivedFrom(field: "item")
}

type ItemAttribute @entity {
  id: ID!
  item: Item! @derivedFrom(field: "attributes")
  attribute: Attribute! # string
  value: BigInt! # uint256
  isIncrease: Boolean!
  isPercentage: Boolean!
}

type Order @entity {
  id: ID!
  marketplaceAddress: Bytes! # address
  category: Category! # string
  nft: NFT
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  amount: BigInt!
  transactionHash: Bytes!
  owner: Bytes! # address
  buyer: Bytes! # address
  price: BigInt! # uint256
  status: OrderStatus! # string
  blockNumber: BigInt!
  expiresAt: BigInt! # uint256
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Bid @entity {
  id: ID!
  bidAddress: Bytes! # address
  category: Category! # string
  nft: NFT
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  bidder: Bytes! # address
  seller: Bytes! # address
  price: BigInt! # uint256
  status: OrderStatus! # string
  blockchainId: String!
  blockNumber: BigInt!
  expiresAt: BigInt! # uint256
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Sale @entity {
  id: ID!
  type: SaleType! # string
  buyer: Bytes! # address
  seller: Bytes! # address
  price: BigInt! # uint256
  nft: NFT!
  amount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!

  # search
  searchTokenId: BigInt!
  searchContractAddress: Bytes!
  searchCategory: Category!
}

type AnalyticsDayData @entity {
  id: ID!
  date: BigInt!
  sales: BigInt!
  volume: BigInt!
  creatorsEarning: BigInt!
  daoEarning: BigInt!
}

enum Rarity {
  bronze
  silver
  gold
  platinum
  diamond
}

enum Category {
  character
  treasure
  item
}

enum Attribute {
  power
  defend
  agility
  intelligence
  luck
}

enum OrderStatus {
  open
  sold
  cancelled
}

enum SaleType {
  bid
  order
}
